{"remainingRequest":"c:\\PluralsightProjects\\webpack-starter-master\\vue-getting-started-master\\03-data-and-events\\end\\vue-heroes\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!c:\\PluralsightProjects\\webpack-starter-master\\vue-getting-started-master\\03-data-and-events\\end\\vue-heroes\\src\\components\\heroes.vue?vue&type=script&lang=js&","dependencies":[{"path":"c:\\PluralsightProjects\\webpack-starter-master\\vue-getting-started-master\\03-data-and-events\\end\\vue-heroes\\src\\components\\heroes.vue","mtime":1582322066213},{"path":"c:\\PluralsightProjects\\webpack-starter-master\\vue-getting-started-master\\03-data-and-events\\end\\vue-heroes\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"c:\\PluralsightProjects\\webpack-starter-master\\vue-getting-started-master\\03-data-and-events\\end\\vue-heroes\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"c:\\PluralsightProjects\\webpack-starter-master\\vue-getting-started-master\\03-data-and-events\\end\\vue-heroes\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"c:\\PluralsightProjects\\webpack-starter-master\\vue-getting-started-master\\03-data-and-events\\end\\vue-heroes\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport axios from 'axios';\n//import numbro from 'numbro';\nvar numbro = require(\"numbro\");\n\nexport default {\n  name: \"metalCalculator\",\n  data() {\n    return {\n      formName: \"Calculator\",\n\n\n       metals:{\n         gold:{\n           price: 0,\n           gramPrice: 0,\n           grams: 0,\n           timer: null,\n           data: {}\n         },\n         silver:{\n           price: 0,\n           gramPrice: 0,\n           grams: 0,\n           timer: null,\n           data: {}\n         }\n       },\n       message: ''\n    };\n  },\n  computed: {\n    goldGramValue() {\n      let ggv = numbro.unformat(this.metals.gold.gramPrice) * numbro.unformat(this.metals.gold.grams?this.metals.gold.grams:0);\n      return this.formatCurrency(ggv);\n    },\n\n  },\n  methods: {\n    cancelmetal() {\n      this.message = '';\n    },\n    clearPower() {\n      this.metal.power = '';\n    },\n    savemetal() {\n      // This only updates when you click the save button\n      this.message = JSON.stringify(this.metals, null, '\\n ');\n    },\n    formatCurrency(val) {\n      return numbro(val).formatCurrency({thousandSeparated: true,\n                                         mantissa:2});\n    },\n    goldTimer() {\n      if (Math.floor(Math.random() * 10) >= 4) {\n        this.updateGoldValue(this.metals.gold.price + .314);\n      }\n      else{\n        this.updateGoldValue(this.metals.gold.price - .314);\n      } \n    },\n    updateGoldValue(goldPrice) {\n      this.metals.gold.price = goldPrice;\n      this.metals.gold.gramPrice = numbro(goldPrice / 31.1).formatCurrency({mantissa:2});\n      console.log(goldPrice);\n\n    },\n    silverTimer() {\n      if (Math.floor(Math.random() * 10) >= 4) {\n        this.updateSilverValue(this.metals.silver.price + .01);\n      }\n      else{\n        this.updateSilverValue(this.metals.silver.price - .01);\n      } \n    },\n    updateSilverValue(silverPrice) {\n      this.metals.silver.price = silverPrice;\n      this.metals.silver.gramPrice = numbro(silverPrice / 31.1).formatCurrency({mantissa:2});\n      console.log(silverPrice);\n\n    },\n    \n    \n    },\n  created () {\n    axios\n      .get('https://www.quandl.com/api/v3/datasets/LBMA/GOLD.json?api_key=onMsLhc34xCSgUj-sj2q')\n      .then(response => {\n         this.metals.gold.data = response.data;\n         this.updateGoldValue(response.data.dataset.data[0][1]);\n         if (!this.metals.gold.timer) {\n           this.metals.gold.timer = setInterval(this.goldTimer,3000);\n           \n         }\n      });\n\n    axios\n      .get('https://www.quandl.com/api/v3/datasets/LBMA/SILVER.json?api_key=onMsLhc34xCSgUj-sj2q')\n      .then(response => {\n        this.metals.silver.data = response.data;\n        this.updateSilverValue(response.data.dataset.data[0][1]);\n        if (!this.metals.silver.timer) {\n           this.metals.silver.timer = setInterval(this.silverTimer,3000);\n           \n         }\n      })\n      \n  },\n\n\n};\n",{"version":3,"sources":["heroes.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmIA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;AAGA","file":"heroes.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"content-container\">\n    <marquee behavior=\"scroll\" direction=\"left\" id=\"marquee\">Gold Price Per Ounce {{ formatCurrency(metals.gold.price) }} Silver Price Per Ounce {{ formatCurrency(metals.silver.price) }}</marquee>\n    <div class=\"section content-title-group\">\n      <h2 class=\"title\">Cammy's Metal Prices</h2>\n    </div>\n    <div class=\"columns\">\n      <div class=\"column is-8\">\n        <div class=\"card edit-detail\">\n          <header class=\"card-header\">\n            <p class=\"card-header-title\">{{ formName }}</p>\n          </header>\n          <div class=\"card-content\">\n            <div class=\"content\">              \n                <!-- <div class=\"field\">\n                  <label class=\"label\" for=\"goldPrice\">Gold Price Per Ounce</label>\n                  <label class=\"input\" id=\"goldPrice\" readonly>{{ formatCurrency(metals.gold.price) }}</label>\n                </div> -->\n              <div class=\"columns\">\n                <div class=\"field column\">\n                  <label class=\"label\" for=\"goldGramPrice\">Gold Price Per Gram</label>\n                  <input class=\"input\" id=\"goldGramPrice\" v-model=\"metals.gold.gramPrice\" />\n                </div>\n                <div class=\"field column\">\n                  <label class=\"label\" for=\"goldGrams\">Number of Grams</label>\n                  <input class=\"input\" id=\"goldGrams\" v-model=\"metals.gold.grams\" />\n                </div>\n                <div class=\"field column\">\n                  <label class=\"label\" for=\"goldGramValue\">Value</label>\n                  <label class=\"input\" id=\"goldGramValue\" readonly>{{ goldGramValue }}</label>\n                </div>\n              </div>\n              <!-- <div class=\"field\">\n                <label class=\"label\" for=\"lastName\">last name</label>\n                <input class=\"input\" id=\"lastName\" v-model=\"metal.lastName\" />\n              </div>\n              <div class=\"field\">\n                <label class=\"label\" for=\"description\">description</label>\n                <textarea\n                  class=\"input\"\n                  id=\"description\"\n                  type=\"text\"\n                  v-model=\"metal.description\"\n                />\n              </div>\n              <div class=\"field\">\n                <label class=\"label\">cape color</label>\n                <label class=\"radio\" for=\"color-red\">\n                  <input\n                    type=\"radio\"\n                    id=\"color-red\"\n                    value=\"red\"\n                    v-model=\"metal.capeColor\"\n                  />\n                  red\n                </label>\n                <label class=\"radio\" for=\"color-blue\">\n                  <input\n                    type=\"radio\"\n                    id=\"color-blue\"\n                    value=\"blue\"\n                    v-model=\"metal.capeColor\"\n                  />\n                  blue\n                </label>\n                <label class=\"radio\" for=\"color-green\">\n                  <input\n                    type=\"radio\"\n                    id=\"color-green\"\n                    value=\"green\"\n                    v-model=\"metal.capeColor\"\n                  />\n                  green\n                </label>\n                <div\n                  class=\"color-line\"\n                  :style=\"{ 'background-color': metal.capeColor }\"\n                ></div>\n              </div>\n              <div class=\"field\">\n                <label for=\"power\">\n                  super power\n                  <div class=\"select is-primary\">\n                    <select\n                      id=\"power\"\n                      v-model=\"metal.power\"\n                      :class=\"{ invalid: !metal.power }\"\n                      @keyup.esc=\"clearPower\"\n                    >\n                      <option disabled value>Please select one</option>\n                      <option>Speed</option>\n                      <option>Flight</option>\n                      <option>Strength</option>\n                      <option>Invisibility</option>\n                    </select>\n                  </div>\n                </label>\n              </div>\n              <div class=\"field\">\n                <label class=\"checkbox\" for=\"active\">\n                  active\n                  <input\n                    type=\"checkbox\"\n                    class=\"is-primary\"\n                    id=\"active\"\n                    v-model=\"metal.active\"\n                  />\n                </label>\n              </div> -->\n            </div> \n          </div> \n          <!-- <footer class=\"card-footer\">\n            <button\n              class=\"link card-footer-item cancel-button\"\n              @click=\"cancelmetal()\"\n            >\n              <i class=\"fas fa-undo\"></i>\n              <span>Cancel</span>\n            </button>\n            <button class=\"link card-footer-item\" @click=\"savemetal()\">\n              <i class=\"fas fa-save\"></i>\n              <span>Save</span>\n            </button>\n          </footer> -->\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n//import numbro from 'numbro';\nvar numbro = require(\"numbro\");\n\nexport default {\n  name: \"metalCalculator\",\n  data() {\n    return {\n      formName: \"Calculator\",\n\n\n       metals:{\n         gold:{\n           price: 0,\n           gramPrice: 0,\n           grams: 0,\n           timer: null,\n           data: {}\n         },\n         silver:{\n           price: 0,\n           gramPrice: 0,\n           grams: 0,\n           timer: null,\n           data: {}\n         }\n       },\n       message: ''\n    };\n  },\n  computed: {\n    goldGramValue() {\n      let ggv = numbro.unformat(this.metals.gold.gramPrice) * numbro.unformat(this.metals.gold.grams?this.metals.gold.grams:0);\n      return this.formatCurrency(ggv);\n    },\n\n  },\n  methods: {\n    cancelmetal() {\n      this.message = '';\n    },\n    clearPower() {\n      this.metal.power = '';\n    },\n    savemetal() {\n      // This only updates when you click the save button\n      this.message = JSON.stringify(this.metals, null, '\\n ');\n    },\n    formatCurrency(val) {\n      return numbro(val).formatCurrency({thousandSeparated: true,\n                                         mantissa:2});\n    },\n    goldTimer() {\n      if (Math.floor(Math.random() * 10) >= 4) {\n        this.updateGoldValue(this.metals.gold.price + .314);\n      }\n      else{\n        this.updateGoldValue(this.metals.gold.price - .314);\n      } \n    },\n    updateGoldValue(goldPrice) {\n      this.metals.gold.price = goldPrice;\n      this.metals.gold.gramPrice = numbro(goldPrice / 31.1).formatCurrency({mantissa:2});\n      console.log(goldPrice);\n\n    },\n    silverTimer() {\n      if (Math.floor(Math.random() * 10) >= 4) {\n        this.updateSilverValue(this.metals.silver.price + .01);\n      }\n      else{\n        this.updateSilverValue(this.metals.silver.price - .01);\n      } \n    },\n    updateSilverValue(silverPrice) {\n      this.metals.silver.price = silverPrice;\n      this.metals.silver.gramPrice = numbro(silverPrice / 31.1).formatCurrency({mantissa:2});\n      console.log(silverPrice);\n\n    },\n    \n    \n    },\n  created () {\n    axios\n      .get('https://www.quandl.com/api/v3/datasets/LBMA/GOLD.json?api_key=onMsLhc34xCSgUj-sj2q')\n      .then(response => {\n         this.metals.gold.data = response.data;\n         this.updateGoldValue(response.data.dataset.data[0][1]);\n         if (!this.metals.gold.timer) {\n           this.metals.gold.timer = setInterval(this.goldTimer,3000);\n           \n         }\n      });\n\n    axios\n      .get('https://www.quandl.com/api/v3/datasets/LBMA/SILVER.json?api_key=onMsLhc34xCSgUj-sj2q')\n      .then(response => {\n        this.metals.silver.data = response.data;\n        this.updateSilverValue(response.data.dataset.data[0][1]);\n        if (!this.metals.silver.timer) {\n           this.metals.silver.timer = setInterval(this.silverTimer,3000);\n           \n         }\n      })\n      \n  },\n\n\n};\n</script>\n"]}]}