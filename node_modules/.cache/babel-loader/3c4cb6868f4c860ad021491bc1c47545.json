{"remainingRequest":"C:\\PluralsightProjects\\webpack-starter-master\\metal-calculator2022\\node_modules\\babel-loader\\lib\\index.js!C:\\PluralsightProjects\\webpack-starter-master\\metal-calculator2022\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\PluralsightProjects\\webpack-starter-master\\metal-calculator2022\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\PluralsightProjects\\webpack-starter-master\\metal-calculator2022\\src\\views\\drummer.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\PluralsightProjects\\webpack-starter-master\\metal-calculator2022\\src\\views\\drummer.vue","mtime":1604009245734},{"path":"C:\\PluralsightProjects\\webpack-starter-master\\metal-calculator2022\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\PluralsightProjects\\webpack-starter-master\\metal-calculator2022\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\PluralsightProjects\\webpack-starter-master\\metal-calculator2022\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\PluralsightProjects\\webpack-starter-master\\metal-calculator2022\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find-index\";\nimport \"core-js/modules/es6.array.find\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: 'drummer',\n  data: function data() {\n    return {\n      formName: 'drummer',\n      samples: [{\n        letter: 'a',\n        validKeys: [65, 97],\n        pattern: 'BackBeat',\n        src: require(\"../assets/sounds/BackBeat.wav\"),\n        isPlaying: false,\n        duration: 6000\n      }, {\n        letter: 's',\n        validKeys: [115, 83],\n        pattern: 'BlastBeat',\n        src: require(\"../assets/sounds/Blast.wav\"),\n        isPlaying: false,\n        duration: 6000\n      }, {\n        letter: 'd',\n        validKeys: [68, 100],\n        pattern: 'D Bass',\n        src: require(\"../assets/sounds/DoubleBass.wav\"),\n        isPlaying: false,\n        duration: 6000\n      }, {\n        letter: 'f',\n        validKeys: [70, 102],\n        pattern: 'Freeze',\n        src: require(\"../assets/sounds/Freezing.wav\"),\n        isPlaying: false,\n        duration: 10000\n      }, {\n        letter: 'g',\n        validKeys: [71, 103],\n        pattern: 'Hammer',\n        src: require(\"../assets/sounds/Hellhammer.wav\"),\n        isPlaying: false,\n        duration: 13000\n      }, {\n        letter: 'h',\n        validKeys: [72, 104],\n        pattern: 'Pagan',\n        src: require(\"../assets/sounds/Pagan1.wav\"),\n        isPlaying: false,\n        duration: 6000\n      }, {\n        letter: 'j',\n        validKeys: [74, 106],\n        pattern: 'Varg',\n        src: require(\"../assets/sounds/Varg1.wav\"),\n        isPlaying: false,\n        duration: 6000\n      }]\n    };\n  },\n  mounted: function mounted() {\n    var vm = this;\n    window.addEventListener('keypress', function (e) {\n      //console.log(e.keyCode);\n      var sample = vm.samples.find(function (s) {\n        return s.validKeys.findIndex(function (i) {\n          return i === e.keyCode;\n        }) >= 0;\n      });\n\n      function resetTransition() {\n        sample.isPlaying = false;\n      }\n\n      if (sample) {\n        var audio = new Audio(sample.src);\n        audio.currentTime = 0;\n        audio.play();\n        sample.isPlaying = true; //audio.addEventListener('ended', console.log('set is playing to false'));\n\n        setTimeout(resetTransition, sample.duration);\n      } else {//console.log(String.fromCharCode(e.keyCode) + ' Not Found');\n      }\n    });\n  }\n};",{"version":3,"sources":["drummer.vue"],"names":[],"mappings":"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","sourcesContent":["<style scoped>\r\nhtml {\r\n  font-size: 10px;\r\n  background: url('https://i.imgur.com/b9r5sEL.jpg') bottom center;\r\n  background-size: cover;\r\n}\r\n\r\nbody,\r\nhtml {\r\n  margin: 0;\r\n  padding: 0;\r\n  font-family: sans-serif;\r\n}\r\n\r\n.keys {\r\n  display: flex;\r\n  flex: 1;\r\n  min-height: 100vh;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n.key {\r\n  border: 0.4rem solid black;\r\n  border-radius: 0.5rem;\r\n  margin: 1rem;\r\n  font-size: 1.5rem;\r\n  padding: 1rem 0.5rem;\r\n  transition: all 2s ease;\r\n  /* transition: all .07s ease; */\r\n  width: 10rem;\r\n  text-align: center;\r\n  color: white;\r\n  background: rgba(0, 0, 0, 0.4);\r\n  text-shadow: 0 0 0.5rem black;\r\n}\r\n\r\n.playing {\r\n  transform: scale(1.1);\r\n  border-color: red;\r\n  box-shadow: 0 0 1rem red;\r\n}\r\n\r\nkbd {\r\n  display: block;\r\n  font-size: 4rem;\r\n}\r\n\r\n.sound {\r\n  font-size: 1.2rem;\r\n  text-transform: uppercase;\r\n  letter-spacing: 0.1rem;\r\n  color: #ffc600;\r\n}\r\n</style>\r\n\r\n<template>\r\n  <div class=\"content-container\">\r\n    <div class=\"keys column is-11\">\r\n      <span\r\n        class=\"key\"\r\n        v-for=\"sample in samples\"\r\n        :key=\"sample.validKeys[0]\"\r\n        :value=\"sample.letter\"\r\n        :class=\"[sample.isPlaying ? 'playing sound' : '']\"\r\n        >{{ sample.letter }}\r\n        <br />\r\n        <span class=\"sound\">{{ sample.pattern }}</span>\r\n      </span>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'drummer',\r\n  data() {\r\n    return {\r\n      formName: 'drummer',\r\n      samples: [\r\n        {\r\n          letter: 'a',\r\n          validKeys: [65, 97],\r\n          pattern: 'BackBeat',\r\n          src: require('../assets/sounds/BackBeat.wav'),\r\n          isPlaying: false,\r\n          duration: 6000,\r\n        },\r\n        {\r\n          letter: 's',\r\n          validKeys: [115, 83],\r\n          pattern: 'BlastBeat',\r\n          src: require('../assets/sounds/Blast.wav'),\r\n          isPlaying: false,\r\n          duration: 6000,\r\n        },\r\n        {\r\n          letter: 'd',\r\n          validKeys: [68, 100],\r\n          pattern: 'D Bass',\r\n          src: require('../assets/sounds/DoubleBass.wav'),\r\n          isPlaying: false,\r\n          duration: 6000,\r\n        },\r\n        {\r\n          letter: 'f',\r\n          validKeys: [70, 102],\r\n          pattern: 'Freeze',\r\n          src: require('../assets/sounds/Freezing.wav'),\r\n          isPlaying: false,\r\n          duration: 10000,\r\n        },\r\n        {\r\n          letter: 'g',\r\n          validKeys: [71, 103],\r\n          pattern: 'Hammer',\r\n          src: require('../assets/sounds/Hellhammer.wav'),\r\n          isPlaying: false,\r\n          duration: 13000,\r\n        },\r\n        {\r\n          letter: 'h',\r\n          validKeys: [72, 104],\r\n          pattern: 'Pagan',\r\n          src: require('../assets/sounds/Pagan1.wav'),\r\n          isPlaying: false,\r\n          duration: 6000,\r\n        },\r\n        {\r\n          letter: 'j',\r\n          validKeys: [74, 106],\r\n          pattern: 'Varg',\r\n          src: require('../assets/sounds/Varg1.wav'),\r\n          isPlaying: false,\r\n          duration: 6000,\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  mounted() {\r\n    let vm = this;\r\n    window.addEventListener('keypress', e => {\r\n      //console.log(e.keyCode);\r\n      let sample = vm.samples.find(\r\n        s => s.validKeys.findIndex(i => i === e.keyCode) >= 0\r\n      );\r\n\r\n      function resetTransition() {\r\n        sample.isPlaying = false;\r\n      }\r\n\r\n      if (sample) {\r\n        let audio = new Audio(sample.src);\r\n        audio.currentTime = 0;\r\n        audio.play();\r\n        sample.isPlaying = true;\r\n        //audio.addEventListener('ended', console.log('set is playing to false'));\r\n        setTimeout(resetTransition, sample.duration);\r\n      } else {\r\n        //console.log(String.fromCharCode(e.keyCode) + ' Not Found');\r\n      }\r\n    });\r\n  },\r\n};\r\n</script>\r\n"],"sourceRoot":"src/views"}]}